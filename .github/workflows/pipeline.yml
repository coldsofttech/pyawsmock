name: Lint, Test & Build

on:
  push:
    branches:
      - "*"

jobs:
  lint:
    name: Run Linter
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
        shell: bash

      - name: Run Linter
        run: |
          flake8 --verbose --color auto --count --statistics --format=default --output-file=flake8-report
        shell: bash

      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: flake8-report

  build-and-test:
    name: Build Package & Execute Test Cases
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install pytest pytest-html
        shell: bash

      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel
        shell: bash

      - name: Install Package
        run: |
          python -m pip install .
        shell: bash

      - name: Run Tests
        run: |
          pytest tests -vv -rEPW -o pytest_collection_order=alphabetical --cache-clear \
            --color=yes --html=pytest-results.html --self-contained-html
        shell: bash

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ matrix.os }}-${{ matrix.python-version }}
          path: pytest-results.html

  release-check:
    name: Release Check
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools twine
        shell: bash

      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel
        shell: bash

      - name: Check Release
        run: |
          twine check dist/*
        shell: bash